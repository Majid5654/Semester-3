}]}eslaf:"tcerroCsI","gnidnep":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR","OG--n\;YLNO SWOR 3 TXEN HCTEF SWOR 0 TESFFO    n\CSED ialiNataRataR    n\YB REDROn\amaN.m ,miN.m    n\YB PUORGn\miN.n = miN.m NO n SA ialiN.kimedakA    n\NIOJ        n\m SA awsisahaM.kimedakA    n\MORFn\ialiNataRataR SA )akgnAialiN.n(GVA    n\,awsisahaMamaN SA amaN.m    n\,miN.m    n\TCELESn\n\OG--n\;SEOS_ameniloP ESU":"lqSerapmoC",llun:"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\XXX |           XXX | XXX --n\------------------------------------ --n\ialiNataRataR | awsisahaMamaN | miN --n\:tuptuo detcepxE --n\--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\.sedarg egareva tsehgih eht htiw stneduts 3 pot eht rof ialiNataRataR dna ,amaN ,miN yalpsiD --":"noitcurtsnI","stnedutS tnegiliD tsoM ehT":"eltiT","11":"dI"{,}eslaf:"tcerroCsI","gnidnep":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR","OG--n\;7200u\tujnaL ataD sisaB7200u\ = amaN.km DNA 7200u\ayajiW idnA .rD7200u\ = amaN.d    n\EREHWn\piN.d = piN.j NO d SA nesoD.naiawagepeK    n\NIOJ        n\kMedoK.j = kMedoK.km NO j SA lawdaJ.kimedakA    n\NIOJ        n\kMedoK.km = kMedoK.n NO km SA hailuKataM.kimedakA    n\NIOJ        n\miN.n = miN.m NO n SA ialiN.kimedakA    n\NIOJ        n\m SA awsisahaM.kimedakA    n\MORFn\nesoDamaN SA amaN.d    n\,hailuKataMamaN SA amaN.km    n\,awsisahaMamaN SA amaN.m    n\,miN.m    n\TCELESn\n\OG--n\;SEOS_ameniloP ESU":"lqSerapmoC",llun:"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\XXX |            XXX |           XXX | XXX --n\------------------------------------------------- --n\nesoDamaN | hailuKataMamaN | awsisahaMamaN | miN --n\:tuptuo detcepxE --n\--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\.0600u\tujnaL ataD sisaB0600u\ esruoc eht --n\ni ayajiW idnA .rD yb thguat stneduts lla rof ,nesoDamaN ,hailuKataMamaN ,awsisahaMamaN ,miN yalpsiD --":"noitcurtsnI","esruoC LDB ni stnedutS":"eltiT","01":"dI"{,}eslaf:"tcerroCsI","gnidnep":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR","OG--n\;CSED iggnitreTialiN YB REDRO kMedoK YB PUORG ialiN.kimedakA MORF iggnitreTialiN SA )akgnAialiN(xaM ,KMedoK TCELESn\n\OG--n\;SEOS_ameniloP ESU":"lqSerapmoC",llun:"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\XXX |    XXX --n\------------------------ --n\iggnitreTialiN | KMedoK --n\:tuptuo detcepxE --n\--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\!tsewol ot tsehgih morf deredro ,KMedoK hcae rof ialiN tsehgih eht yalpsiD --":"noitcurtsnI","esruoC rep edarG tsehgiH":"eltiT","9":"dI"{,}eslaf:"tcerroCsI","gnidnep":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR",";amaN.d    n\YB PUORGn\piN.j = piN.d NO j SA lawdaJ.kimedakA    n\NIOJ        n\d SA nesoD.naiawagepeK    n\MORFn\rajagneMmaJhalmuJ SA ))iaseleSmaJ.j ,ialuMmaJ.j ,RUOH(FFIDETAD(MUS    n\,nesoDamaN SA amaN.d    n\TCELESn\n\OG--n\;SEOS_ameniloP ESU":"lqSerapmoC",llun:"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\XXX |               XXX |       XXX --n\--------------------------------------------- --n\ecivreS amaN | rajagneMmaJhalmuJ | nesoDamaN --n\:tuptuo detcepxE --n\--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\!)sruoh gnihcaeT( rajagneMmaJhalmuJ rieht fo latot eht htiw gnola nesoDamaN yalpsiD --":"noitcurtsnI","sruoH gnihcaeT rerutceL":"eltiT","8":"dI"{,}eslaf:"tcerroCsI","gnidnep":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR",";7200u\%.forP%7200u\ EKIL amaN.d EREHWn\piN.d = piN.j NO j lawdaJ.kimedakA NIOJ RENNI        n\d nesoD.naiawagepeK    n\MORFn\iraH.j    n\,kMedoK.j    n\,amaN.d    n\,piN.d    n\TCELESn\n\OG--n\;SEOS_ameniloP ESU":"lqSerapmoC",llun:"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\XXX |    XXX |          XXX |         XXX --n\------------------------------------------- --n\iraH | KMedoK |         amaN |         piN --n\:tuptuo detcepxE --n\--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\!0600u\srosseforP0600u\ era taht srerutcel lla fo eludehcs gnihcaet eht morf iraH dna ,KMedoK ,amaN ,piN yalpsiD --":"noitcurtsnI","eludehcS srosseforP":"eltiT","7":"dI"{,}eslaf:"tcerroCsI","gnorw":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR","OG--n\;hailuKataM.kimedakA    n\MORFn\]KM SKS 6200u\ nopeleT romoN[ SA ))05(RAHCRAVN SA skS(TSACt\n\,]KM amaN 6200u\ awsisahaM amaN[ SA amaNt\n\,]KM edoK 6200u\ awsisahaM MIN[ SA KMedoK    n\TCELESn\LLA NOINUn\awsisahaM.kimedakA    n\MORFn\]KM SKS 6200u\ nopeleT romoN[ SA nopeleTromoNt\n\,]KM amaN 6200u\ awsisahaM amaN[ SA amaNt\n\,]KM edoK 6200u\ awsisahaM MIN[ SA miN    n\TCELES":"lqSerapmoC","KMedoK.km = KMedoK.n NO km hailuKataM.kimedakAt\n\r\NIOJn\r\miN.n = miN.m NO n ialiN.kimedakAt\n\r\NIOJn\r\m awsisahaM.kimedakAt\n\r\MORFn\r\2200u\KM SKS 6200u\ nopeleT romoN2200u\ SA skS.km || 7200u\ 6200u\ 7200u\ || nopeleTromoN.mt\n\r\,2200u\KM amaN 6200u\ awsisahaM amaN2200u\ SA amaN.km || 7200u\ 6200u\ 7200u\ || amaN.mt\n\r\,2200u\KM edoK 6200u\ awsisahaM MIN2200u\ SA KMedoK.km || 7200u\ 6200u\ 7200u\  || miN.mt\n\r\ TCELES":"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\Y |                      YYY |                     OBP --n\XXX |                      XXX |                       1 --n\--------------------------------------------------------------------------- --n\KM SKS 6200u\ nopeleT romoN | KM amaN 6200u\ awsisahaM amaN | KM edoK 6200u\ awsisahaM MIN --n\:tuptuo detcepxE --n\--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\.skS dna ,amaN ,KMedoK snmuloc elbat hailuKataM.kimedakA eht htiw nopeleTromoN 6200u\ ,amaN ,miN snmuloc elbat --n\awsisahaM.kimedakA eht morf atad denibmoc eht yalpsid ,1 .oN noitseuq ni sa erutcurts esabatad emas eht gnisU --":"noitcurtsnI","noitarepO )nanupmiH(teS":"eltiT","6":"dI"{,}eurt:"tcerroCsI","tcerroc":"tluseR","OG--n\;ialiNpakeR.kimedakA MORF * TCELES":"lqSkcehCtsoP","dnammoc":"epyT",llun:"gnirtSksaTwaR","OG--n\;yeK_ialiNpakeR.kimedakA MORF * TCELES":"lqSerapmoC",";KMedoK.km = KMedoK.n NO km hailuKataM.kimedakAn\r\NIOJn\r\mIN.m = miN.n NO m awsisahaM.kimedakAn\r\ NIOJn\r\n ialiN.kimedakA MORFn\r\2200u\akgnA ialiN2200u\ SA akgnAialiN.nt\n\r\,2200u\hailuK ataM amaN2200u\ SA amaN.kmt\n\r\,2200u\awsisahaM amaN2200u\ SA amaN.mt\n\r\,2200u\MIN2200u\ sA miN.mt\n\r\TCELESn\r\SA ialiNpakeR.kimedakA WEIV ETAERC":"lqSkcehC","OGn\;kMedoK.n = kMedoK.km NO km hailuKataM.kimedakA NIOJ RENNIt\n\miN.n = miN.m NO n ialiN.kimedakA NIOJ RENNIt\n\m awsisahaM.kimedakA MORFn\]akgnA ialiN[ SA akgnAialiN.n ,]hailuK ataM amaN[ SA amaN.km ,]awsisahaM amaN[ SA amaN.m ,]MIN[ sa miN.m TCELESn\SA yeK_ialiNpakeR.kimedakA WEIV ETAERCn\OGn\;SEOS_ameniloP ESU":"lqSkcehCerP","--n\.WEIV eht ni YB REDRO on eb dluohs erehT * --n\)OG( hctab esu ton oD * --n\:etoN --n\--n\!ialiNpakeR.kimedakA deman WEIV a etaerc ot noitseuq suoiverp eht ni desu uoy yreuq eht yfidoM --":"noitcurtsnI","WEIV":"eltiT","5":"dI"{,}eurt:"tcerroCsI","tcerroc":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR","OG--n\;CSED akgnAialiN YB REDROn\kMedoK.n = kMedoK.km NO km hailuKataM.kimedakA NIOJ RENNI    n\miN.n = miN.m NO n ialiN.kimedakA NIOJ RENNI    n\m awsisahaM.kimedakA MORFn\]akgnA ialiN[ SA akgnAialiN.n ,]hailuK ataM amaN[ SA amaN.km ,]awsisahaM amaN[ SA amaN.m ,]MIN[ sa miN.m TCELESn\n\OG--n\;SEOS_ameniloP ESU":"lqSerapmoC",";CSED akgnAialiN.nn\r\YB REDROn\r\kMedoK.km = KMedoK.n NO km SA hailuKataM.kimedakAn\r\NIOJn\r\miN.m = miN.n NO m SA awsisahaM.kimedakAn\r\NIOJn\r\n SA ialiN.kimedakAn\r\MORFn\r\n\r\2200u\akgnA ialiN2200u\ SA akgnAialiN.nn\r\,2200u\hailuK ataM amaN2200u\ SA amaN.kmn\r\,2200u\awsisahaM amaN2200u\ SA amaN.mn\r\,2200u\MIN2200u\ SA miN.mn\r\ TCELES":"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\XXX |              XXX |            XXX |   1 --n\--------------------------------------------------------- --n\akgnA ialiN | hailuK ataM amaN | awsisahaM amaN | MIN --n\:tuptuo detcepxE --n\--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\.tsewol ot tsehgih morf edarg yb redrO !eman esruoc --n\dna eman s7200u\tneduts eht htiw gnola sedarg tneduts yalpsid ,1 .oN noitseuq ni sa erutcurts esabatad emas eht gnisU --":"noitcurtsnI","NIOJ RENNI elpmiS":"eltiT","4":"dI"{,}eurt:"tcerroCsI","tcerroc":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR","OG--n\;CSA kMedoK ,miN YB REDRO ialiN.kimedakA MORF * TCELESn\n\OG--n\;SEOS_ameniloP ESU":"lqSerapmoC",";CSA KMedoK,CSA miN YB REDROn\r\ialiN.kimedakA MORFn\r\* TCELES":"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\!tsegral ot tsellams morf kMedoK dna miN yb deredro --n\,elbat ialiN.kimedakA eht fo stnetnoc lla yalpsid ,1 .oN noitseuq ni sa erutcurts esabatad emas eht gnisU --":"noitcurtsnI","3# TCELES cisaB":"eltiT","3":"dI"{,}eurt:"tcerroCsI","tcerroc":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR","OG--n\;CSA kMedoK YB REDRO hailuKataM.kimedakA MORF * TCELESn\n\OG--n\;SEOS_ameniloP ESU":"lqSerapmoC",";CSA KMedoK YB REDROn\r\hailuKataM.kimedakA MORFn\r\* TCELES":"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\!tsegral ot tsellams morf kMedoK yb deredro --n\,elbat hailuKataM.kimedakA eht fo stnetnoc lla yalpsid ,1 .oN noitseuq ni sa erutcurts esabatad emas eht gnisU --":"noitcurtsnI","2# TCELES cisaB":"eltiT","2":"dI"{,}eurt:"tcerroCsI","tcerroc":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT",llun:"gnirtSksaTwaR","OG--n\;CSA miN YB REDRO awsisahaM.kimedakA MORF * TCELESn\n\OG--n\;SEOS_ameniloP ESU":"lqSerapmoC",";lawdaJ.kimedakA MORF * TCELESn\r\;nesoD.naiawagepeK MORF * TCELESn\r\;ialiN.kimedakA MORF * TCELESn\r\;hailuKataM.kimedakA MORF * TCELESn\r\;awsisahaM.kimedakA MORF * TCELES":"lqSkcehC",";SEOS_ameniloP ESU":"lqSkcehCerP","--n\)OG( hctab esu ton oD * --n\:etoN --n\--n\!tsegral ot tsellams morf MIN yb deredro ,elbat awsisahaM.kimedakA eht fo stnetnoc lla yalpsiD --n\--n\)kMedoK( hailuKataM.kimedakA E300u\- kMedoK dna )piN( nesoD.naiawagepeK E300u\- piN    --n\:syeK ngieroF htiw }iraH ,iaseleSmaJ ,ialuMmaJ ,tiderK ,kMedoK ,piN{ lawdaJ.kimedakA elbaT .5 --n\}kusaMnuhaT ,idorP ,amaN ,piN{ nesoD.naiawagepeK elbaT .4 --n\)kMedoK( hailuKataM.kimedakA E300u\- kMedoK    --n\dna )miN( awsisahaM.kimedakA E300u\- miN :syeK ngieroF htiw }akgnAialiN ,kMedoK ,miN{ ialiN.kimedakA elbaT .3 --n\}skS ,amaN ,kMedoK{ hailuKataM.kimedakA elbaT .2 --n\}nopeleTromoN ,tamalA ,amaN ,miN{ awsisahaM.kimedakA elbaT .1 --n\:selbat 3 fo stsisnoc hcihw ,SEOS_ameniloP deman erutcurts esabatad a gnisu era ew ,maxe siht nI --":"noitcurtsnI","1# TCELES cisaB":"eltiT","1":"dI"{[:"sksaT","23:11:21 4202/01/03":"emiTnigeB","moc.liamg@dijamnawr3":"liamEtnapicitraP","dijaM nawrE 4600271432":"emaNtnapicitraP","8":"dImaxEnepO"{