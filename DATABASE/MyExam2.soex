}]}eurt:"tcerroCsI","tcerroc":"tluseR","OG--n\r\;awsisahaM.obd MORF tamalA ,amaN TCELESn\r\n\r\OG--n\r\;BDtseTseoS ESU":"lqSkcehCtsoP","dnammoc":"epyT","n\r\-- ]lqs_erapmoc_dne[ --n\r\OG--n\r\;7200u\iweD aniR7200u\ = amaN EREHW awsisahaM.obd MORF tamalA ,amaN TCELESn\r\n\r\OG--n\r\;BDyeKseoS ESUn\r\-- ]lqs_erapmoc[ --n\r\-- ]lqs_kcehc_tsop_dne[ --n\r\OG--n\r\;awsisahaM.obd MORF tamalA ,amaN TCELESn\r\n\r\OG--n\r\;BDtseTseoS ESUn\r\-- ]lqs_kcehc_tsop[ --n\r\-- ]lqs_kcehc_erp_dne[ --n\r\;BDtseTseoS ESUn\r\n\r\OGn\r\;)7200u\gnalaM .baK ,olgnaraK ayaR .lJ7200u\ ,7200u\iweD aniR7200u\(t\n\r\SEULAV )tamalA ,amaN( awsisahaM.obd OTNI TRESNIn\r\n\r\OGn\r\;BDyeKseoS ESUn\r\-- ]lqs_kcehc_erp[ --n\r\-- ]noitcurtsni_dne[ --n\r\7200u\gnalaM .baK ,olgnaraK ayaR .lJ7200u\ :tamalA --n\r\7200u\iweD aniR7200u\ :amaN --n\r\:tukireb iagabes liated nagned tubesret lebat ek atad 1 nakhabmaT --n\r\.)rahcraV(tamalA ,)rahcraV(amaN ,)YTITNEDI(DI :molok-molok nagned awsisahaM.obd amanreb gnosok lebat haubes tapadreT --n\r\-- ]noitcurtsni[ --n\r\-- ]epyt_dne[ --n\r\dnammoc --n\r\-- ]epyt[ --n\r\-- ]eltit_dne[ --n\r\TRESNI cisaB --n\r\-- ]eltit[ --n\r\":"gnirtSksaTwaR","OG--n\r\;7200u\iweD aniR7200u\ = amaN EREHW awsisahaM.obd MORF tamalA ,amaN TCELESn\r\n\r\OG--n\r\;BDyeKseoS ESU":"lqSerapmoC",";)7200u\gnalaM .baK ,olgnaraK ayaR .lJ7200u\ ,7200u\iweD aniR7200u\(SEULAVn\r\)tamalA,amaN( awsisahaM.obd OTNI TRESNI":"lqSkcehC",";BDtseTseoS ESUn\r\n\r\OGn\r\;)7200u\gnalaM .baK ,olgnaraK ayaR .lJ7200u\ ,7200u\iweD aniR7200u\(t\n\r\SEULAV )tamalA ,amaN( awsisahaM.obd OTNI TRESNIn\r\n\r\OGn\r\;BDyeKseoS ESU":"lqSkcehCerP","7200u\gnalaM .baK ,olgnaraK ayaR .lJ7200u\ :tamalA --n\r\7200u\iweD aniR7200u\ :amaN --n\r\:tukireb iagabes liated nagned tubesret lebat ek atad 1 nakhabmaT --n\r\.)rahcraV(tamalA ,)rahcraV(amaN ,)YTITNEDI(DI :molok-molok nagned awsisahaM.obd amanreb gnosok lebat haubes tapadreT --":"noitcurtsnI","TRESNI cisaB":"eltiT","2":"dI"{,}eurt:"tcerroCsI","tcerroc":"tluseR",llun:"lqSkcehCtsoP","yreuq":"epyT","n\r\-- ]lqs_erapmoc_dne[ --n\r\OG--n\r\;awsisahaM.obd MORF amaN ,tamalA ,miN TCELESn\r\n\r\OG--n\r\;BDyeKseoS ESUn\r\-- ]lqs_erapmoc[ --n\r\-- ]lqs_kcehc_erp_dne[ --n\r\OGn\r\;)7200u\gnalaM - osolpgnaraK ,ojrahupeK7200u\ ,7200u\awansahnuY yppoY7200u\(t\n\r\SEULAV )tamalA ,amaN( awsisahaM.obd OTNI TRESNIn\r\n\r\OGn\r\tsrif bdtset ot tluser eht tresnI -- ;BDtseTseoS ESUn\r\-- ]lqs_kcehc_erp[ --n\r\-- ]noitcurtsni_dne[ --n\r\awansahnuY yppoY | gnalaM - osolpgnaraK ,ojrahupeK |   1 --n\r\--------------------------------------------------------- --n\r\             amaN |                          tamalA | miN --n\r\:tukireb itrepes awsisaham sirab 1 naklisahgnem naka aynsuraheS --n\r\:natataC --n\r\!tubesreT lebat irad amaN nad ,tamalA ,miN nahurulesek naklipmaT --n\r\.atad sirab 1 isireb gnay ]tamalA ,amaN ,miN[ molok nagned awsisahaM.obd amanreb lebat haubes tapadreT --n\r\-- ]noitcurtsni[ --n\r\-- ]epyt_dne[ --n\r\yreuq --n\r\-- ]epyt[ --n\r\-- ]eltit_dne[ --n\r\TCELES cisaB --n\r\-- ]eltit[ --n\r\":"gnirtSksaTwaR","OG--n\r\;awsisahaM.obd MORF amaN ,tamalA ,miN TCELESn\r\n\r\OG--n\r\;BDyeKseoS ESU":"lqSerapmoC",";awsisahaM.obd MORFn\r\amaN,tamalA,miN TCELES":"lqSkcehC","OGn\r\;)7200u\gnalaM - osolpgnaraK ,ojrahupeK7200u\ ,7200u\awansahnuY yppoY7200u\(t\n\r\SEULAV )tamalA ,amaN( awsisahaM.obd OTNI TRESNIn\r\n\r\OGn\r\tsrif bdtset ot tluser eht tresnI -- ;BDtseTseoS ESU":"lqSkcehCerP","awansahnuY yppoY | gnalaM - osolpgnaraK ,ojrahupeK |   1 --n\r\--------------------------------------------------------- --n\r\             amaN |                          tamalA | miN --n\r\:tukireb itrepes awsisaham sirab 1 naklisahgnem naka aynsuraheS --n\r\:natataC --n\r\!tubesreT lebat irad amaN nad ,tamalA ,miN nahurulesek naklipmaT --n\r\.atad sirab 1 isireb gnay ]tamalA ,amaN ,miN[ molok nagned awsisahaM.obd amanreb lebat haubes tapadreT --":"noitcurtsnI","TCELES cisaB":"eltiT","1":"dI"{[:"sksaT","84:73:80 4202/01/03":"emiTnigeB","moc.liamg@dijamnawr3":"liamEtnapicitraP","dijaM nawrE 4600271432":"emaNtnapicitraP","1":"dImaxEnepO"{